# runs linkerd in a daemonset, in linker-to-linker mode, routing gRPC requests
---
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: xxx
  name: l5d-config
data:
  config.yaml: |-
    admin:
      ip: 0.0.0.0
      port: 9990

    namers:
    - kind: io.l5d.k8s
      host: localhost
      port: 8001

    telemetry:
    - kind: io.l5d.prometheus
    - kind: io.l5d.recentRequests
      sampleRate: 0.25

    usage:
      orgId: linkerd-daemonset-grpc

    routers:
    - protocol: h2
      label: outgoing
      dtab: |
        /srv        => /#/io.l5d.k8s/xxx/grpc;
        /grpc       => /srv;
        /svc        => /$/io.buoyant.http.domainToPathPfx/grpc;
      identifier:
        kind: io.l5d.header.path
        segments: 1
      interpreter:
        kind: default
        transformers:
        - kind: io.l5d.k8s.daemonset
          namespace: xxx
          # service && port name
          port: incoming
          service: l5d
          hostNetwork: true
      servers:
      - port: 4140
        ip: 0.0.0.0

    - protocol: h2
      label: incoming
      dtab: |
        /srv        => /#/io.l5d.k8s/xxx/grpc;
        /grpc       => /srv;
        /svc        => /$/io.buoyant.http.domainToPathPfx/grpc;
      identifier:
        kind: io.l5d.header.path
        segments: 1
      interpreter:
        kind: default
        transformers:
        - kind: io.l5d.k8s.localnode
          hostNetwork: true
      servers:
      - port: 4141
        ip: 0.0.0.0
---
apiVersion: extensions/v1beta1
kind: DaemonSet
metadata:
  namespace: xxx
  labels:
    app: l5d
  name: l5d
spec:
  template:
    metadata:
      labels:
        app: l5d
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      volumes:
      - name: l5d-config
        configMap:
          name: "l5d-config"
      containers:
      - name: l5d
        image: buoyantio/linkerd:1.4.1
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        args:
        - /io.buoyant/linkerd/config/config.yaml
        ports:
        - name: outgoing
          containerPort: 4140
          hostPort: 4140
        - name: incoming
          containerPort: 4141
          hostPort: 4141
        - name: admin
          containerPort: 9990
          hostPort: 9990
        volumeMounts:
        - name: "l5d-config"
          mountPath: "/io.buoyant/linkerd/config"
          readOnly: true

      - name: kubectl
        image: buoyantio/kubectl:v1.8.5
        args:
        - "proxy"
        - "-p"
        - "8001"

---
# 外网访问linkerd xxxx:4140
# k8s内访问linkerd l5d:4140
apiVersion: v1
kind: Service
metadata:
  namespace: xxx
  name: l5d
spec:
  selector:
    app: l5d
  ports:
  - name: outgoing
    port: 4140
  - name: incoming
    port: 4141
  - name: admin
    port: 9990

# ---
# kind: ClusterRoleBinding
# apiVersion: rbac.authorization.k8s.io/v1beta1
# metadata:
#   name: linkerd-role-binding
# subjects:
#   - kind: ServiceAccount
#     name: default
#     namespace: xxx
# roleRef:
#   kind: ClusterRole
#   name: admin
#   apiGroup: rbac.authorization.k8s.io

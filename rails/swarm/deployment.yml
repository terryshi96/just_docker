---
# environment下目录名与分支对应 用于软链配置
- hosts: 
  remote_user: 
  vars:
  # 通用配置参数
    app_user: 
    group: 
    project_name:
    # 镜像仓库配置
    registry_url: registry.cn-hongkong.aliyuncs.com
    registry_username: 
    registry_password: 
    # 代码仓库配置
    repo_prefix: 
    repo_url: "{{ repo_prefix }}/{{ group }}/{{ project_name }}.git"
    producton_config_repo_url: "{{ repo_prefix }}/xxxx/{{ project_name }}-{{ branch }}"
    # 路径配置
    app_path: /www/{{ app_user }}/apps/{{ project_name }}/{{ branch }}
    log_path: /www/{{ app_user }}/logs/{{ project_name }}/{{ branch }}
    # 时间戳tag
    tag: "{{ ansible_date_time.iso8601_basic_short }}"

  # 非通用配置参数
    config_dict: {
      "sit": {
        "port": 25002,
        "replicas": 1,
        "label": 'development'
      },
      "production": {
        "port": 26002,
        "replicas": 1,
        "label": 'production'
      }
    }
    app_port: '{{ config_dict[branch].port }}'
    replicas: '{{ config_dict[branch].replicas }}'

  tasks:
# 日志进行统一存储
  - name: check log dir
    file: path={{ log_path }} state=directory mode=0755 owner={{ app_user }} group={{ app_user }}


# 软链配置
  - name: soft link config file
    when: inventory_hostname in groups['manager']
    shell: "./lnfs_files.sh {{ branch }}"
    delegate_to: localhost

# 登录镜像仓库
  - name: Log into private registry and force re-authorization
    when: inventory_hostname in groups['manager']
    docker_login:
      registry: "{{ registry_url }}"
      username: "{{ registry_username }}"
      password: "{{ registry_password }}"
      reauthorize: yes
    delegate_to: localhost

    # 构建镜像并推送到镜像库
  - name: Build image and push it to private repo
    when: inventory_hostname in groups['manager']
    docker_image:
      path: .
      # buildargs:
      name: "{{ registry_url }}/{{ app_user }}/{{ project_name }}-{{ branch }}"
      tag: "{{ tag }}"
      push: yes
    delegate_to: localhost
    
  - name: check app dir
    when: inventory_hostname in groups['manager']
    file: path={{ app_path }} state=directory mode=0755 owner={{ app_user }} group={{ app_user }}
# 拷贝模板
  - name: copy docker-compose.yml
    when: inventory_hostname in groups['manager']
    template: src=docker-compose.yml.j2 dest={{ app_path }}/docker-compose.yml

# 登录镜像仓库
  - name: Log into private registry
    when: inventory_hostname in groups['manager']
    docker_login:
      registry: "{{ registry_url }}"
      username: "{{ registry_username }}"
      password: "{{ registry_password }}"
      reauthorize: yes

# 在测试中的2.8版本有stack模块可以直接使用，目前2.7版本只能使用shell调用
  - name: deploy to swarm
    when: inventory_hostname in groups['manager']
    shell: cd {{ app_path }} && docker stack deploy --with-registry-auth -c docker-compose.yml {{project_name}}-{{ branch }}